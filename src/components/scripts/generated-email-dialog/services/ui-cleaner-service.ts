
import { supabase } from '@/integrations/supabase/client';

/**
 * System prompt for the UI Cleaner AI
 */
const UI_CLEANER_PROMPT = `Jesteś UI Cleaner AI, zaawansowanym agentem specjalizującym się w formatowaniu i poprawianiu treści emaili marketingowych w języku polskim.

Twoje zadanie to:
1. Poprawić formatowanie tekstu dla lepszej czytelności w interfejsie użytkownika
2. Usunąć wszelkie zbędne oznaczenia techniczne, placeholdery lub artefakty
3. Zapewnić odpowiednie odstępy między paragrafami
4. Usunąć podwójne spacje, nadmiarowe znaki nowej linii itp.
5. Upewnić się, że CTA (wezwanie do działania) jest wyraźne i przyciąga wzrok
6. Zachować oryginalną treść i intencję wiadomości, nie zmieniając jej znaczenia

NIE zmieniaj:
- Kluczowych argumentów lub punktów perswazji
- Struktury narracyjnej maila
- Tonu i stylu komunikacji
- Języka i słownictwa użytego w treści

Treść, którą otrzymasz, będzie gotowym mailem marketingowym. Twoim zadaniem jest tylko poprawić jego formatowanie i wygląd, zachowując pełną treść i skuteczność perswazyjną.`;

/**
 * Sends the generated email content through the UI Cleaner AI
 * to improve formatting and readability for the UI display
 * 
 * @param emailContent The raw email content generated by PAS or CJN agent
 * @returns Cleaned and formatted email content ready for UI display
 */
export async function cleanEmailContentForUI(emailContent: string): Promise<string> {
  try {
    console.log('Starting UI cleaning process for email content');
    
    // If there's no content or it's too short, return it as is
    if (!emailContent || emailContent.length < 50) {
      console.log('Email content too short, skipping UI cleaning');
      return emailContent;
    }
    
    // Create the request body for the UI Cleaner AI
    const requestBody = {
      prompt: UI_CLEANER_PROMPT,
      emailContent: emailContent,
      _timestamp: Date.now(), // Add timestamp to prevent caching
      _nonce: Math.random().toString(36).substring(2, 15) // Add random nonce
    };
    
    console.log('Sending content to UI Cleaner with length:', emailContent.length);
    
    // Call the UI Cleaner edge function
    const { data, error } = await supabase.functions.invoke('ui-cleaner', {
      body: requestBody,
      headers: {
        'Cache-Control': 'no-cache, no-store, must-revalidate',
        'Pragma': 'no-cache',
        'Expires': '0',
        'X-No-Cache': Date.now().toString()
      }
    });
    
    // Handle errors from the edge function
    if (error) {
      console.error('Error invoking UI Cleaner:', error.message);
      // If there's an error, return the original content
      return emailContent;
    }
    
    // Ensure we have cleaned content in the response
    if (!data.cleanedContent) {
      console.warn('UI Cleaner did not return cleaned content, using original');
      return emailContent;
    }
    
    console.log('UI cleaning completed successfully');
    
    return data.cleanedContent;
  } catch (err: any) {
    console.error('Failed to clean email content for UI:', err);
    // In case of error, return the original content
    return emailContent;
  }
}
